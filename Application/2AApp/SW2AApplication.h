/**
* @file
* @brief 
*
*/

#ifndef _SW_2A_APPLICATION_H_
#define _SW_2A_APPLICATION_H_

#include "SWApplication.h"
#include "SWThread.h"
//#include "SWRTSPParameter.h"
#include "SWMessage.h"

class CSW2AApp : public CSWApplication, CSWMessage
{
	CLASSINFO(CSW2AApp, CSWApplication);
public:
	
	/**
	* @brief 
	*/
	CSW2AApp();

	/**
	* @brief 
	*/
	virtual ~CSW2AApp();

	virtual HRESULT InitInstance(const WORD wArgc, const CHAR** szArgv);
	virtual HRESULT ReleaseInstance();

	virtual HRESULT Run();
	
	static HRESULT Breath(VOID)
	{
		return HeartBeat();
	}

protected:

	static VOID OnProcessExtendDataProxy(PVOID pvParam);
	HRESULT OnProcessExtendData(VOID);

	//static VOID SetDenoiseStatusCallBack(/*VOID *pvContext,*/ DWORD dwTnfStatus, DWORD dwSnfStatus);
public:
	VOID SetDenoiseStatus(DWORD dwTnfStatus, DWORD dwSnfStatus);


protected:
	
	HRESULT OnSetExp(WPARAM wParam, LPARAM lParam);
	HRESULT OnGetExp(WPARAM wParam, LPARAM lParam);
	HRESULT OnSetGain(WPARAM wParam, LPARAM lParam);
	HRESULT OnGetGain(WPARAM wParam, LPARAM lParam);
    HRESULT OnSetRGB(WPARAM wParam, LPARAM lParam);
	HRESULT OnGetRGB(WPARAM wParam, LPARAM lParam);
	HRESULT OnSetAEState(WPARAM wParam, LPARAM lParam);
	HRESULT OnGetAEState(WPARAM wParam, LPARAM lParam);
	HRESULT OnSetAEThreshold(WPARAM wParam, LPARAM lParam);
	HRESULT OnGetAEThreshold(WPARAM wParam, LPARAM lParam);

	HRESULT OnSetAEExpRange(WPARAM wParam, LPARAM lParam);
	HRESULT OnGetAEExpRange(WPARAM wParam, LPARAM lParam);
	HRESULT OnSetAEZone(WPARAM wParam, LPARAM lParam);
	HRESULT OnGetAEZone(WPARAM wParam, LPARAM lParam);
	HRESULT OnSetAEGainRange(WPARAM wParam, LPARAM lParam);
	HRESULT OnGetAEGainRange(WPARAM wParam, LPARAM lParam);
	HRESULT OnSetScene(WPARAM wParam, LPARAM lParam);
	//
	HRESULT OnSetAWBState(WPARAM wParam, LPARAM lParam);
	HRESULT OnGetAWBState(WPARAM wParam, LPARAM lParam);

	HRESULT OnSetWDRStrength(WPARAM wParam, LPARAM lParam);
	HRESULT OnGetWDRStrength(WPARAM wParam, LPARAM lParam);
	//HRESULT OnSetSharpnessState(WPARAM wParam, LPARAM lParam);	//todo已经不支持
	//HRESULT OnGetSharpnessState(WPARAM wParam, LPARAM lParam);
	//HRESULT OnSetSharpness(WPARAM wParam, LPARAM lParam);		//todo已经不支持
	//HRESULT OnGetSharpness(WPARAM wParam, LPARAM lParam);
	HRESULT OnSetSaturationContrastState(WPARAM wParam, LPARAM lParam);
	HRESULT OnGetSaturationContrastState(WPARAM wParam, LPARAM lParam);
	HRESULT OnSetSaturation(WPARAM wParam, LPARAM lParam);
	HRESULT OnGetSaturation(WPARAM wParam, LPARAM lParam);

	HRESULT OnSetContrast(WPARAM wParam, LPARAM lParam);
	HRESULT OnGetContrast(WPARAM wParam, LPARAM lParam);
	HRESULT OnSetTNFState(WPARAM wParam, LPARAM lParam);
	HRESULT OnGetTNFState(WPARAM wParam, LPARAM lParam);
	HRESULT OnSetSNFState(WPARAM wParam, LPARAM lParam);
	HRESULT OnGetSNFState(WPARAM wParam, LPARAM lParam);
	//HRESULT OnSetTrafficLigthEnhanceState(WPARAM wParam, LPARAM lParam);	//todo已经不支持
	//HRESULT OnGetTrafficLigthEnhanceState(WPARAM wParam, LPARAM lParam);
	HRESULT OnSetTrafficLigthEnhanceRegion(WPARAM wParam, LPARAM lParam);
	HRESULT OnSetTrafficLigthLUMTh(WPARAM wParam, LPARAM lParam);
	HRESULT OnSetCammaEnable(WPARAM wParam, LPARAM lParam);
	HRESULT OnGetCammaEnable(WPARAM wParam, LPARAM lParam);
	HRESULT OnSetCamma(WPARAM wParam, LPARAM lParam);
	HRESULT OnGetCamma(WPARAM wParam, LPARAM lParam);

	HRESULT OnSetEDGEEnhance(WPARAM wParam, LPARAM lParam);
	HRESULT OnGetEDGEEnhance(WPARAM wParam, LPARAM lParam);
	HRESULT OnSetDCIRISAutoState(WPARAM wParam, LPARAM lParam);
	HRESULT OnGetDCIRISAutoState(WPARAM wParam, LPARAM lParam);
	HRESULT OnSetZOOMDCIRIS(WPARAM wParam, LPARAM lParam);
	HRESULT OnSetShrinkDCIRIS(WPARAM wParam, LPARAM lParam);
	HRESULT OnSetFilterState(WPARAM wParam, LPARAM lParam);
	//
	HRESULT OnSetAcSyncState(WPARAM wParam, LPARAM lParam);
	HRESULT OnGetAcSyncState(WPARAM wParam, LPARAM lParam);

	HRESULT OnSetAcSyncDelay(WPARAM wParam, LPARAM lParam);
	HRESULT OnGetAcSyncDelay(WPARAM wParam, LPARAM lParam);
	HRESULT OnSetIOArg(WPARAM wParam, LPARAM lParam);
	HRESULT OnGetIOArg(WPARAM wParam, LPARAM lParam);
	HRESULT OnSetEDGEMod(WPARAM wParam, LPARAM lParam);
	HRESULT OnGetEDGEMod(WPARAM wParam, LPARAM lParam);
	HRESULT OnSetGrayImageState(WPARAM wParam, LPARAM lParam);
	HRESULT OnGetGrayImageState(WPARAM wParam, LPARAM lParam);
	HRESULT OnSetFPGAReg(WPARAM wParam, LPARAM lParam);
	HRESULT OnSetFPGAReadRegAddr(WPARAM wParam, LPARAM lParam);
	HRESULT OnGetFPGAReg(WPARAM wParam, LPARAM lParam);

	HRESULT OnSetWorkMode(WPARAM wParam, LPARAM lParam);
	HRESULT OnSetSoftCapture(WPARAM wParam, LPARAM lParam);
	HRESULT OnSetFlashGate(WPARAM wParam, LPARAM lParam);
	HRESULT OnGetVersion(WPARAM wParam, LPARAM lParam);
	HRESULT OnSetCapShutter(WPARAM wParam, LPARAM lParam);
	HRESULT OnSetCapGain(WPARAM wParam, LPARAM lParam);
	HRESULT OnSetCapSharpen(WPARAM wParam, LPARAM lParam);
	HRESULT OnSetCapRGB(WPARAM wParam, LPARAM lParam);
	HRESULT OnGetDayNight(WPARAM wParam, LPARAM lParam);
	HRESULT OnSetBackLight(WPARAM wParam, LPARAM lParam);

	HRESULT OnSetAWBMode(WPARAM wParam, LPARAM lParam);
	HRESULT OnSetRelayState(WPARAM wParam, LPARAM lParam);

    //
    SW_BEGIN_MESSAGE_MAP(CSW2AApp, CSWMessage)	
		SW_MESSAGE_HANDLER(MSG_2A_SET_EXP, OnSetExp)
		SW_MESSAGE_HANDLER(MSG_2A_GET_EXP, OnGetExp)
		SW_MESSAGE_HANDLER(MSG_2A_SET_GAIN, OnSetGain)
		SW_MESSAGE_HANDLER(MSG_2A_GET_GAIN, OnGetGain)
		SW_MESSAGE_HANDLER(MSG_2A_SET_RGB, OnSetRGB)
		SW_MESSAGE_HANDLER(MSG_2A_GET_RGB, OnGetRGB)
		SW_MESSAGE_HANDLER(MSG_2A_SET_AE_STATE, OnSetAEState)
		SW_MESSAGE_HANDLER(MSG_2A_GET_AE_STATE, OnGetAEState)
		SW_MESSAGE_HANDLER(MSG_2A_SET_AE_THRESHOLD, OnSetAEThreshold)
		SW_MESSAGE_HANDLER(MSG_2A_GET_AE_THRESHOLD, OnGetAEThreshold)
		
		SW_MESSAGE_HANDLER(MSG_2A_SET_AE_EXP_RANGE, OnSetAEExpRange)
		SW_MESSAGE_HANDLER(MSG_2A_GET_AE_EXP_RANGE, OnGetAEExpRange)
		SW_MESSAGE_HANDLER(MSG_2A_SET_AE_ZONE, OnSetAEZone)
		SW_MESSAGE_HANDLER(MSG_2A_GET_AE_ZONE, OnGetAEZone)
		SW_MESSAGE_HANDLER(MSG_2A_SET_AE_GAIN_RANGE, OnSetAEGainRange)
		SW_MESSAGE_HANDLER(MSG_2A_GET_AE_GAIN_RANGE, OnGetAEGainRange)
		SW_MESSAGE_HANDLER(MSG_2A_SET_SCENE, OnSetScene)
		//SW_MESSAGE_HANDLER(MSG_2A_GET_SCENE, OnSetParam)
		SW_MESSAGE_HANDLER(MSG_2A_SET_AWB_STATE, OnSetAWBState)
		SW_MESSAGE_HANDLER(MSG_2A_GET_AWB_STATE, OnGetAWBState)

		SW_MESSAGE_HANDLER(MSG_2A_SET_WDR_STRENGTH, OnSetWDRStrength)
		SW_MESSAGE_HANDLER(MSG_2A_GET_WDR_STRENGTH, OnGetWDRStrength)
		//SW_MESSAGE_HANDLER(MSG_2A_SET_SHARPNESS_STATE, OnSetSharpnessState)//todo 已经不支持
		//SW_MESSAGE_HANDLER(MSG_2A_GET_SHARPNESS_STATE, OnGetSharpnessState)
		//SW_MESSAGE_HANDLER(MSG_2A_SET_SHARPNESS, OnSetSharpness)//todo 已经不支持
		//SW_MESSAGE_HANDLER(MSG_2A_GET_SHARPNESS, OnGetSharpness)
		SW_MESSAGE_HANDLER(MSG_2A_SET_SATURATION_CONTRAST_STATE, OnSetSaturationContrastState)
		SW_MESSAGE_HANDLER(MSG_2A_GET_SATURATION_CONTRAST_STATE, OnGetSaturationContrastState)
		SW_MESSAGE_HANDLER(MSG_2A_SET_SATURATION, OnSetSaturation)
		SW_MESSAGE_HANDLER(MSG_2A_GET_SATURATION, OnGetSaturation)

		SW_MESSAGE_HANDLER(MSG_2A_SET_CONTRAST, OnSetContrast)
		SW_MESSAGE_HANDLER(MSG_2A_GET_CONTRAST, OnGetContrast)
		SW_MESSAGE_HANDLER(MSG_2A_SET_TNF_STATE, OnSetTNFState)
		SW_MESSAGE_HANDLER(MSG_2A_GET_TNF_STATE, OnGetTNFState)
		SW_MESSAGE_HANDLER(MSG_2A_SET_SNF_STATE, OnSetSNFState)
		SW_MESSAGE_HANDLER(MSG_2A_GET_SNF_STATE, OnGetSNFState)
		//SW_MESSAGE_HANDLER(MSG_2A_SET_TRAFFIC_LIGTH_ENHANCE_STATE, OnSetTrafficLigthEnhanceState)//todo已经不支持
		//SW_MESSAGE_HANDLER(MSG_2A_GET_TRAFFIC_LIGTH_ENHANCE_STATE, OnGetTrafficLigthEnhanceState)
		SW_MESSAGE_HANDLER(MSG_2A_SET_TRAFFIC_LIGTH_ENHANCE_REGION, OnSetTrafficLigthEnhanceRegion)
		SW_MESSAGE_HANDLER(MSG_2A_SET_TRAFFIC_LIGTH_LUM_TH, OnSetTrafficLigthLUMTh)
		SW_MESSAGE_HANDLER(MSG_2A_SET_GAMMA_ENABLE, OnSetCammaEnable)
		SW_MESSAGE_HANDLER(MSG_2A_GET_GAMMA_ENABLE, OnGetCammaEnable)
		SW_MESSAGE_HANDLER(MSG_2A_SET_GAMMA, OnSetCamma)
		SW_MESSAGE_HANDLER(MSG_2A_GET_GAMMA, OnGetCamma)

		SW_MESSAGE_HANDLER(MSG_2A_SET_EDGE_ENHANCE, OnSetEDGEEnhance)
		SW_MESSAGE_HANDLER(MSG_2A_GET_EDGE_ENHANCE, OnGetEDGEEnhance)
		SW_MESSAGE_HANDLER(MSG_2A_SET_DCIRIS_AUTO_STATE, OnSetDCIRISAutoState)
		SW_MESSAGE_HANDLER(MSG_2A_GET_DCIRIS_AUTO_STATE, OnGetDCIRISAutoState)
		SW_MESSAGE_HANDLER(MSG_2A_ZOOM_DCIRIS, OnSetZOOMDCIRIS)
		SW_MESSAGE_HANDLER(MSG_2A_SHRINK_DCIRIS, OnSetShrinkDCIRIS)
		SW_MESSAGE_HANDLER(MSG_2A_SET_FILTER_STATE, OnSetFilterState)
		//
		SW_MESSAGE_HANDLER(MSG_2A_SET_AC_SYNC_STATE, OnSetAcSyncState)
		SW_MESSAGE_HANDLER(MSG_2A_GET_AC_SYNC_STATE, OnGetAcSyncState)
		
		SW_MESSAGE_HANDLER(MSG_2A_SET_AC_SYNC_DELAY, OnSetAcSyncDelay)
		SW_MESSAGE_HANDLER(MSG_2A_GET_AC_SYNC_DELAY, OnGetAcSyncDelay)
		SW_MESSAGE_HANDLER(MSG_2A_SET_IO_ARG, OnSetIOArg)
		SW_MESSAGE_HANDLER(MSG_2A_GET_IO_ARG, OnGetIOArg)
		SW_MESSAGE_HANDLER(MSG_2A_SET_EDGE_MOD, OnSetEDGEMod)
		SW_MESSAGE_HANDLER(MSG_2A_GET_EDGE_MOD, OnGetEDGEMod)
		SW_MESSAGE_HANDLER(MSG_2A_SET_GRAY_IMAGE_STATE, OnSetGrayImageState)
		SW_MESSAGE_HANDLER(MSG_2A_GET_GRAY_IMAGE_STATE, OnGetGrayImageState)
		SW_MESSAGE_HANDLER(MSG_2A_SET_FPGA_REG, OnSetFPGAReg)
		SW_MESSAGE_HANDLER(MSG_2A_SET_FPGA_READ_REG_ADDR,OnSetFPGAReadRegAddr)
		SW_MESSAGE_HANDLER(MSG_2A_GET_FPGA_REG, OnGetFPGAReg)

		SW_MESSAGE_HANDLER(MSG_2A_SET_WORKMODE, OnSetWorkMode)
		SW_MESSAGE_HANDLER(MSG_2A_SOFT_CAPTURE, OnSetSoftCapture)
		SW_MESSAGE_HANDLER(MSG_2A_SET_FLASH_GATE, OnSetFlashGate)
		SW_MESSAGE_HANDLER(MSG_2A_GET_VERSION, OnGetVersion)
		SW_MESSAGE_HANDLER(MSG_2A_SET_CAP_SHUTTER, OnSetCapShutter)
		SW_MESSAGE_HANDLER(MSG_2A_SET_CAP_GAIN, OnSetCapGain)
		SW_MESSAGE_HANDLER(MSG_2A_SET_CAP_SHARPEN, OnSetCapSharpen)
		SW_MESSAGE_HANDLER(MSG_2A_SET_CAP_RGB, OnSetCapRGB)
		SW_MESSAGE_HANDLER(MSG_2A_GET_DAY_NIGHT, OnGetDayNight)
		SW_MESSAGE_HANDLER(MSG_2A_SET_BACKLIGHT, OnSetBackLight)

		SW_MESSAGE_HANDLER(MSG_2A_SET_AWB_MODE, OnSetAWBMode)
		SW_MESSAGE_HANDLER(MSG_2A_SET_RELAY_STATE, OnSetRelayState)
    SW_END_MESSAGE_MAP()

private:	
	BOOL m_fIsGetParam;
	//RTSP_PARAM_INFO m_cRtspParamInfo;
	CSWThread* m_pThreadExtendData;
	INT GetVersion(VOID);

	DWORD m_dwReadRegAddr;
};


//extern CSW2AApp theApp;


#endif //_SW_2A_APPLICATION_H_

